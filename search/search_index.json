{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Project CS Note Site Under construction Project CS is an experimental website for Msc CS students of UCD. Students can write notes for lecture and maintain them. The main aim is to spread knowledge of CS with everyone and to maintain an archive. Personal interpretations of topics are encouraged rather than a blatant copy of presentations. The Website is still in its pre-alpha build. And may change considerably based on requirements and inputs. The website will be hosted both as a github page and if possible a standalone page. Github page will ensure that other authors can quickly deploy the articles and get reflected online instantly and everyone gets to keep source code of website. I've decided to make the Site using Mkdocs so that everyone can concentrate on writting and not on technical aspects of it. How to use the site","title":"Home"},{"location":"#welcome-to-project-cs","text":"Note Site Under construction Project CS is an experimental website for Msc CS students of UCD. Students can write notes for lecture and maintain them. The main aim is to spread knowledge of CS with everyone and to maintain an archive. Personal interpretations of topics are encouraged rather than a blatant copy of presentations. The Website is still in its pre-alpha build. And may change considerably based on requirements and inputs. The website will be hosted both as a github page and if possible a standalone page. Github page will ensure that other authors can quickly deploy the articles and get reflected online instantly and everyone gets to keep source code of website. I've decided to make the Site using Mkdocs so that everyone can concentrate on writting and not on technical aspects of it.","title":"Welcome to Project CS"},{"location":"#how-to-use-the-site","text":"","title":"How to use the site"},{"location":"Django/Getting_started/","text":"Installing Django installation Create project Folder structure Running Server First thing we need to do is install all the packages. We can do this in a seperate conda environment. This will be usedfull when we do the deployment. So first create a new conda environment by typing 1 conda create --name django_environment python = 3 .7 After installing the environment actiavate it. Now do a pip install django To see if it installed do python -m django --version Now we need to initialize a project. 1 django-admin startproject django_project This should generate a project for us. So go there and open that up. This makes a project folder there. Inside that there will be another folder with same folder with project name. Along with that there is a manage.py . This file can be run to manage the entire website like running , migration, deployment checking. Now the new folder created which has same name as our project has the following files init .py - tells python that this is a package asgi.py settings.py - For managing all the settings. Contains the security keys, database settings, other django libraries which are used like crispy forms. urls.py - This is used for mapping of URLS by default they have set one for admin wsgi.py - How web application and server communicate. Now we can start a webserver and access the default site. so go to location where we have manage.py then do 1 python manage.py runserver This will run the server. Now go to localhost and port to see the website. If we go to /admin this opens a new page.","title":"Chapter 1"},{"location":"Django/Getting_started/#installing-django","text":"installation Create project Folder structure Running Server First thing we need to do is install all the packages. We can do this in a seperate conda environment. This will be usedfull when we do the deployment. So first create a new conda environment by typing 1 conda create --name django_environment python = 3 .7 After installing the environment actiavate it. Now do a pip install django To see if it installed do python -m django --version Now we need to initialize a project. 1 django-admin startproject django_project This should generate a project for us. So go there and open that up. This makes a project folder there. Inside that there will be another folder with same folder with project name. Along with that there is a manage.py . This file can be run to manage the entire website like running , migration, deployment checking. Now the new folder created which has same name as our project has the following files init .py - tells python that this is a package asgi.py settings.py - For managing all the settings. Contains the security keys, database settings, other django libraries which are used like crispy forms. urls.py - This is used for mapping of URLS by default they have set one for admin wsgi.py - How web application and server communicate. Now we can start a webserver and access the default site. so go to location where we have manage.py then do 1 python manage.py runserver This will run the server. Now go to localhost and port to see the website. If we go to /admin this opens a new page.","title":"Installing Django"},{"location":"Interview%20Prep/Strings/","text":"Interview Prep! Note Site Under construction 1. Make Permuatations Given a string make all possible permutatations. example 1 input -> 'ABC' 1 output -> ['ABC', 'ACB', 'BAC', 'BCA', 'CAB', 'CBA'] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def anagram ( string , rtn = None ): if rtn is None : rtn = [] if ( len ( string ) == 2 ): x = string [ 0 ] + string [ 1 ] y = string [ 1 ] + string [ 0 ] return [ x , y ] else : for x in string : data = anagram ( string . replace ( x , \"\" )) for y in data : rtn . append ( x + y ) return rtn","title":"Interview Prep!"},{"location":"Interview%20Prep/Strings/#interview-prep","text":"Note Site Under construction","title":"Interview Prep!"},{"location":"Interview%20Prep/Strings/#1-make-permuatations","text":"Given a string make all possible permutatations. example 1 input -> 'ABC' 1 output -> ['ABC', 'ACB', 'BAC', 'BCA', 'CAB', 'CBA'] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def anagram ( string , rtn = None ): if rtn is None : rtn = [] if ( len ( string ) == 2 ): x = string [ 0 ] + string [ 1 ] y = string [ 1 ] + string [ 0 ] return [ x , y ] else : for x in string : data = anagram ( string . replace ( x , \"\" )) for y in data : rtn . append ( x + y ) return rtn","title":"1. Make Permuatations"},{"location":"Interview%20Prep/arrays/","text":"Interview Prep! Note Site Under construction [x] - Content - Friday OCT 2 Lets start of with Array Questions. 1. two Number Sum Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. 1 2 3 4 5 6 7 8 def twoNumberSum ( array , targetSum ): dic = {} for x in array : if x in dic . keys (): return [ x , targetSum - x ] else : dic [ targetSum - x ] = True return [] Use Hash Map and compliment to do the operation in O(n) 2. Valid Subsequence Given two non-empty arrays of integers, write a function that determines whether the second array is a subsequence of the first one. A subsequence of an array is a set of numbers that aren\u2019t necessarily adjacent in the array but that are in the same order as they appear in the array. For example these numbers [2, 3, 5] are a subsequence of the array: [1, 2, 3, 4, 5] 1 2 3 4 5 def isValidSubsequence ( array , sequence ): for x in array : if ( len ( sequence ) and x == sequence [ 0 ]): sequence . pop ( 0 ) return ( not len ( sequence )) This will be an O(n) operation with pop done on sequence array 3. Three Number Sum problem - Important concept Given an array and a value, find if there is a triplet in array whose sum is equal to the given value. If there is such a triplet present in array, then return the triplets. The triplets must be in ascending order Eg Array = [12,3,1,2,-6,5,-8,6] target = 0 Solution: [[-8,2,6],[-8,3,5],[-6,1,5]] The brute force solution is to use 3 for loops 1 2 3 4 5 6 7 8 9 10 def threeNumberSum ( array , targetSum ): triple = [] array . sort () for x in range ( len ( array )): for y in range ( x + 1 , len ( array )): for z in range ( y + 1 , len ( array )): sum = array [ x ] + array [ y ] + array [ z ] if sum == targetSum : triple . append ([ array [ x ], array [ y ], array [ z ]]) return triple This will be an O(n^3) operation not the best way The other way is to use pointers. First we sort data using an efficent sorting algorith. Then we will here use 2 loops. The there will be two pointers left and right. The right will start from end and first one will follow the first for loop. When sum is larger than target we can decrement right index similarly if the sum is less we increment the left index. The important point is the increment which occurs when we find a sum. The reason we increment both index is because we know for sure that if we increment/decrement one value it is definitly not going to be equal to sum. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def threeNumberSum ( array , targetSum ): triple = [] left , right = 0 , 0 array . sort () for x in range ( len ( array ) - 2 ): left = x + 1 right = len ( array ) - 1 while left < right : if ( array [ x ] + array [ left ] + array [ right ] == targetSum ): triple . append ([ array [ x ], array [ left ], array [ right ]]) left += 1 right -= 1 elif ( array [ x ] + array [ left ] + array [ right ] > targetSum ): right -= 1 else : left += 1 return triple 4. Smallest Number Given two arrays find a pair of numbers that has absolute difference closest to zero Eg Array1 = [-1, 5, 10, 20, 28, 3] Array2 = [26, 134, 135, 15, 17] Solution: [28,26] The brute force solution is to use 2 for loops and find all possible combinations 1 2 3 4 5 6 7 8 9 10 11 def smallestDifference ( arrayOne , arrayTwo ): smallest_pair = [] smallest_val = abs ( arrayOne [ 0 ] - arrayTwo [ 0 ] for x in arrayOne : for y in arrayTwo : diff = abs ( x - y ) if ( diff < smallest_val ): smallest_val = diff smallest_pair = [ x , y ] return smallest_pair This will be an O(n^2) operation not the best way The other way is to use pointers. And exploit the ability to sort the array. First we sort data using an efficent sorting algorithm. Here we are doing a kind of calculated heurestic approach. with time complexity of nlog(n) + mlog(m) Note Note how we iinitialized float to have inifinte value smallest_val = float(\"inf\") 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def smallestDifference ( arrayOne , arrayTwo ): arrayOne . sort () arrayTwo . sort () data = [] i , j = 0 , 0 smallest_val = float ( \"inf\" ) while ( i < len ( arrayOne ) and j < len ( arrayTwo )): arr1 = arrayOne [ i ] arr2 = arrayTwo [ j ] diff = abs ( arr1 - arr2 ) if diff < smallest_val : smallest_val = diff data = [ arrayOne [ i ], arrayTwo [ j ]] if ( arr1 > arr2 ): j += 1 elif ( arr1 < arr2 ): i += 1 else : return [ arr1 , arr2 ] return data 4. Tournament Winner Suppose we have two arrays competition this contains list of team [\"homeTeam\",\"awayTeam\"] 1 2 3 4 5 competiton = [ [\"GO\",\"PYTHON\"], [\"PHP\",\"PYTHON\"], [\"PYTHON\",\"JAVA\"] ] results this contains a one dimension array which contains result 1 results = [0, 0, 1] where 0 means victory for the awayTeam and vice versa Each victory means +3 points Find out the winner of the competion here the sample output will be PYTHON ``` ``` py def tournamentWinner(competitions, results): # Write your code here. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 hashmap = {} for x,y in enumerate(competitions): for z in y: if (z not in hashmap): hashmap[z] = 0 if( results[x] == 1 ): hashmap[y[0]] = hashmap[y[0]] + 3 else: hashmap[y[1]] = hashmap[y[1]] + 3 highest = 0 data = None for x in hashmap.keys(): if( hashmap[x] > highest): highest = hashmap[x] data = x return data `` Using a hashmap we can do this fairly straightforward with O(n)` result 5. String 6. String 7. String","title":"arrays"},{"location":"Interview%20Prep/arrays/#interview-prep","text":"Note Site Under construction [x] - Content - Friday OCT 2 Lets start of with Array Questions.","title":"Interview Prep!"},{"location":"Interview%20Prep/arrays/#1-two-number-sum","text":"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. 1 2 3 4 5 6 7 8 def twoNumberSum ( array , targetSum ): dic = {} for x in array : if x in dic . keys (): return [ x , targetSum - x ] else : dic [ targetSum - x ] = True return [] Use Hash Map and compliment to do the operation in O(n)","title":"1. two Number Sum"},{"location":"Interview%20Prep/arrays/#2-valid-subsequence","text":"Given two non-empty arrays of integers, write a function that determines whether the second array is a subsequence of the first one. A subsequence of an array is a set of numbers that aren\u2019t necessarily adjacent in the array but that are in the same order as they appear in the array. For example these numbers [2, 3, 5] are a subsequence of the array: [1, 2, 3, 4, 5] 1 2 3 4 5 def isValidSubsequence ( array , sequence ): for x in array : if ( len ( sequence ) and x == sequence [ 0 ]): sequence . pop ( 0 ) return ( not len ( sequence )) This will be an O(n) operation with pop done on sequence array","title":"2. Valid Subsequence"},{"location":"Interview%20Prep/arrays/#3-three-number-sum-problem-important-concept","text":"Given an array and a value, find if there is a triplet in array whose sum is equal to the given value. If there is such a triplet present in array, then return the triplets. The triplets must be in ascending order Eg Array = [12,3,1,2,-6,5,-8,6] target = 0 Solution: [[-8,2,6],[-8,3,5],[-6,1,5]] The brute force solution is to use 3 for loops 1 2 3 4 5 6 7 8 9 10 def threeNumberSum ( array , targetSum ): triple = [] array . sort () for x in range ( len ( array )): for y in range ( x + 1 , len ( array )): for z in range ( y + 1 , len ( array )): sum = array [ x ] + array [ y ] + array [ z ] if sum == targetSum : triple . append ([ array [ x ], array [ y ], array [ z ]]) return triple This will be an O(n^3) operation not the best way The other way is to use pointers. First we sort data using an efficent sorting algorith. Then we will here use 2 loops. The there will be two pointers left and right. The right will start from end and first one will follow the first for loop. When sum is larger than target we can decrement right index similarly if the sum is less we increment the left index. The important point is the increment which occurs when we find a sum. The reason we increment both index is because we know for sure that if we increment/decrement one value it is definitly not going to be equal to sum. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def threeNumberSum ( array , targetSum ): triple = [] left , right = 0 , 0 array . sort () for x in range ( len ( array ) - 2 ): left = x + 1 right = len ( array ) - 1 while left < right : if ( array [ x ] + array [ left ] + array [ right ] == targetSum ): triple . append ([ array [ x ], array [ left ], array [ right ]]) left += 1 right -= 1 elif ( array [ x ] + array [ left ] + array [ right ] > targetSum ): right -= 1 else : left += 1 return triple","title":"3. Three Number Sum problem - Important concept"},{"location":"Interview%20Prep/arrays/#4-smallest-number","text":"Given two arrays find a pair of numbers that has absolute difference closest to zero Eg Array1 = [-1, 5, 10, 20, 28, 3] Array2 = [26, 134, 135, 15, 17] Solution: [28,26] The brute force solution is to use 2 for loops and find all possible combinations 1 2 3 4 5 6 7 8 9 10 11 def smallestDifference ( arrayOne , arrayTwo ): smallest_pair = [] smallest_val = abs ( arrayOne [ 0 ] - arrayTwo [ 0 ] for x in arrayOne : for y in arrayTwo : diff = abs ( x - y ) if ( diff < smallest_val ): smallest_val = diff smallest_pair = [ x , y ] return smallest_pair This will be an O(n^2) operation not the best way The other way is to use pointers. And exploit the ability to sort the array. First we sort data using an efficent sorting algorithm. Here we are doing a kind of calculated heurestic approach. with time complexity of nlog(n) + mlog(m) Note Note how we iinitialized float to have inifinte value smallest_val = float(\"inf\") 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def smallestDifference ( arrayOne , arrayTwo ): arrayOne . sort () arrayTwo . sort () data = [] i , j = 0 , 0 smallest_val = float ( \"inf\" ) while ( i < len ( arrayOne ) and j < len ( arrayTwo )): arr1 = arrayOne [ i ] arr2 = arrayTwo [ j ] diff = abs ( arr1 - arr2 ) if diff < smallest_val : smallest_val = diff data = [ arrayOne [ i ], arrayTwo [ j ]] if ( arr1 > arr2 ): j += 1 elif ( arr1 < arr2 ): i += 1 else : return [ arr1 , arr2 ] return data","title":"4. Smallest Number"},{"location":"Interview%20Prep/arrays/#4-tournament-winner","text":"Suppose we have two arrays competition this contains list of team [\"homeTeam\",\"awayTeam\"] 1 2 3 4 5 competiton = [ [\"GO\",\"PYTHON\"], [\"PHP\",\"PYTHON\"], [\"PYTHON\",\"JAVA\"] ] results this contains a one dimension array which contains result 1 results = [0, 0, 1] where 0 means victory for the awayTeam and vice versa Each victory means +3 points Find out the winner of the competion here the sample output will be PYTHON ``` ``` py def tournamentWinner(competitions, results): # Write your code here. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 hashmap = {} for x,y in enumerate(competitions): for z in y: if (z not in hashmap): hashmap[z] = 0 if( results[x] == 1 ): hashmap[y[0]] = hashmap[y[0]] + 3 else: hashmap[y[1]] = hashmap[y[1]] + 3 highest = 0 data = None for x in hashmap.keys(): if( hashmap[x] > highest): highest = hashmap[x] data = x return data `` Using a hashmap we can do this fairly straightforward with O(n)` result","title":"4. Tournament Winner"},{"location":"Interview%20Prep/arrays/#5-string","text":"","title":"5. String"},{"location":"Interview%20Prep/arrays/#6-string","text":"","title":"6. String"},{"location":"Interview%20Prep/arrays/#7-string","text":"","title":"7. String"},{"location":"Interview%20Prep/linkedlist/","text":"Interview Prep! Note Site Under construction [x] - Content - May 4 Lets start of with LinkedList Questions. 1. Remove Duplicate Given an ordered linkedlist. Write a function that returns a modifed version of linkedlist that doesn't have duplicate values for example Input 1 linkedlist : 1 -> 1 -> 2 -> 2 ->3 Output 1 linkedlist : 1 -> 2 -> 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class LinkedList : def __init__ ( self , value ): self . value = value self . next = None def removeDuplicatesFromLinkedList ( linkedList ): prev = linkedList current = prev . next while ( current ): if ( prev . value == current . value ): current = current . next continue else : prev . next = current prev = prev . next current = current . next if ( prev . next != None ): prev . next = current return linkedList Here note the last if condition. This is needed when we have duplicates in the last part. This is O(n) . This is possible because the linkedlist is ordered.","title":"linkedlist"},{"location":"Interview%20Prep/linkedlist/#interview-prep","text":"Note Site Under construction [x] - Content - May 4 Lets start of with LinkedList Questions.","title":"Interview Prep!"},{"location":"Interview%20Prep/linkedlist/#1-remove-duplicate","text":"Given an ordered linkedlist. Write a function that returns a modifed version of linkedlist that doesn't have duplicate values for example Input 1 linkedlist : 1 -> 1 -> 2 -> 2 ->3 Output 1 linkedlist : 1 -> 2 -> 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class LinkedList : def __init__ ( self , value ): self . value = value self . next = None def removeDuplicatesFromLinkedList ( linkedList ): prev = linkedList current = prev . next while ( current ): if ( prev . value == current . value ): current = current . next continue else : prev . next = current prev = prev . next current = current . next if ( prev . next != None ): prev . next = current return linkedList Here note the last if condition. This is needed when we have duplicates in the last part. This is O(n) . This is possible because the linkedlist is ordered.","title":"1. Remove Duplicate"},{"location":"Java/IO/","text":"Java IO read and write Note Site Under construction [ ] - Content - Friday May 2 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks Java I/O is pretty big however it seems to follow a certain pattern therfore once we get the basics down the interfaces are all same. There are two main systems. Info The IO is in java.io package \"IO System\" 1 2 * byte I/O * charecter I/O Now what is byte IO and charecter IO? Byte IO is basicallty the lowest form of input where the program accepts data in the form of 8 bits. This means we can transfer audio, video or any form of data. The charecter stream is used to accept data in the form of 16 bit unicode. This is useful for accepting only charecter data, However, it is useful for internationalizing data 1. Charecter Stream For now we will focus on the charecter stream as its more important from interview point of view though. We will discuss byte stream. Byte stream has two abstract classes InputStream and OutputStream both have large number of classes which we can use. But we will focus on Charecter stream class If we look the most important will be 1 2 3 * BufferedReader * FileReader * InputStreamReader We will need to create a BufferedReader for any type of inputs. Now if we are accepting data from the console it is from System.in which is already in java.lang and is Public Static final so we can call it anywhere. Example 1 Read Character from console So lets start reading data from console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import java.io.* ; public class ReadFile { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); try { System . out . println ( \"Enter number\" ); int num = br . read (); System . out . println (( char ) num ); br . mark ( 1 ); } catch ( IOException e ){ System . out . println ( \"put an number bud\" ); } } } So couple of things to notice. First we make a BuffereReader this has to take input from System.in but that is in bytes this can be converted using a InputStreamReader therfore we use that. The I/O all can throw IOException . Important observation consider the following example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import java.io.* ; public class ReadFile { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); try { System . out . println ( \"Enter number\" ); int num = br . read (); System . out . println (( char ) num ); br . mark ( 1 ); } catch ( IOException e ){ System . out . println ( \"put an number bud\" ); } try { System . out . println ( \"Enter a string\" ); String x = br . readLine (); System . out . println ( x ); } catch ( IOException e ){ System . out . println ( \"Illegal stuff mate\" ); } } } here we have used a readLine() function after read() this will not work as expected because when we do a read(). The charecter which we entered is accepted but before that we need to press enter which adds EOF to the stream. So next time when we do a readLine() it will take the EOF and stop the read process. Therfore consider how the buffer takes in data. Numeric Wrappers When we use character stream we will need to use the type Wrappers to convert data from one form to other. The type wrappers are Double, Float, Long, Integer, Short, Byte, Character, and Boolean. So we can accept data in String format and convert to corresponding internal format we want. for example if we need to convert to Integer we can do Integer.parseInt(x) Info why not use type cast? Type casting can only be done with compatible types like from double to int and between primitive types. String is not a primitive but an object therfore we need to do casting by fucntions associated with the given object. \"034\" -> does not make sense hence we use Integer.ParseInt() Why have a buffer? Buffer is a temporary place where we can store data while its being populated. A buffer is almost like a shopping cart. When we shop we will keep everything we need in the cart. Once we are done with it, all objects can be checkedout. If we dont use a buffer it's as if we are with a single prodcut each time to the checkout. Buffer improves the efficency of our streams. Thats why we wrap all out streams in a Buffer.","title":"IO"},{"location":"Java/IO/#java-io-read-and-write","text":"Note Site Under construction [ ] - Content - Friday May 2 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks Java I/O is pretty big however it seems to follow a certain pattern therfore once we get the basics down the interfaces are all same. There are two main systems. Info The IO is in java.io package \"IO System\" 1 2 * byte I/O * charecter I/O Now what is byte IO and charecter IO? Byte IO is basicallty the lowest form of input where the program accepts data in the form of 8 bits. This means we can transfer audio, video or any form of data. The charecter stream is used to accept data in the form of 16 bit unicode. This is useful for accepting only charecter data, However, it is useful for internationalizing data","title":"Java IO read and write"},{"location":"Java/IO/#1-charecter-stream","text":"For now we will focus on the charecter stream as its more important from interview point of view though. We will discuss byte stream. Byte stream has two abstract classes InputStream and OutputStream both have large number of classes which we can use. But we will focus on Charecter stream class If we look the most important will be 1 2 3 * BufferedReader * FileReader * InputStreamReader We will need to create a BufferedReader for any type of inputs. Now if we are accepting data from the console it is from System.in which is already in java.lang and is Public Static final so we can call it anywhere.","title":"1. Charecter Stream"},{"location":"Java/IO/#example-1-read-character-from-console","text":"So lets start reading data from console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import java.io.* ; public class ReadFile { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); try { System . out . println ( \"Enter number\" ); int num = br . read (); System . out . println (( char ) num ); br . mark ( 1 ); } catch ( IOException e ){ System . out . println ( \"put an number bud\" ); } } } So couple of things to notice. First we make a BuffereReader this has to take input from System.in but that is in bytes this can be converted using a InputStreamReader therfore we use that. The I/O all can throw IOException .","title":"Example 1 Read Character from console"},{"location":"Java/IO/#important-observation","text":"consider the following example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import java.io.* ; public class ReadFile { public static void main ( String [] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in )); try { System . out . println ( \"Enter number\" ); int num = br . read (); System . out . println (( char ) num ); br . mark ( 1 ); } catch ( IOException e ){ System . out . println ( \"put an number bud\" ); } try { System . out . println ( \"Enter a string\" ); String x = br . readLine (); System . out . println ( x ); } catch ( IOException e ){ System . out . println ( \"Illegal stuff mate\" ); } } } here we have used a readLine() function after read() this will not work as expected because when we do a read(). The charecter which we entered is accepted but before that we need to press enter which adds EOF to the stream. So next time when we do a readLine() it will take the EOF and stop the read process. Therfore consider how the buffer takes in data.","title":"Important observation"},{"location":"Java/IO/#numeric-wrappers","text":"When we use character stream we will need to use the type Wrappers to convert data from one form to other. The type wrappers are Double, Float, Long, Integer, Short, Byte, Character, and Boolean. So we can accept data in String format and convert to corresponding internal format we want. for example if we need to convert to Integer we can do Integer.parseInt(x) Info why not use type cast? Type casting can only be done with compatible types like from double to int and between primitive types. String is not a primitive but an object therfore we need to do casting by fucntions associated with the given object. \"034\" -> does not make sense hence we use Integer.ParseInt()","title":"Numeric Wrappers"},{"location":"Java/IO/#why-have-a-buffer","text":"Buffer is a temporary place where we can store data while its being populated. A buffer is almost like a shopping cart. When we shop we will keep everything we need in the cart. Once we are done with it, all objects can be checkedout. If we dont use a buffer it's as if we are with a single prodcut each time to the checkout. Buffer improves the efficency of our streams. Thats why we wrap all out streams in a Buffer.","title":"Why have a buffer?"},{"location":"Java/Objects/","text":"Object Oriented Programing Note Site Under construction [ ] - Content - Friday OCT 3 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks OOPS allows us to write programs in a way that its easy to write, easy to maintain, and easy to debug. The philosophy behind OOPS is that we should build a program that is focused around the problem we try to solve. For example if we are trying to create a pizza delivery system. In real life we have delivery man, map, the kitchen. All these can be defined as objects in our program and have them interact as seperate entities. These concepts will become much more clearer when we start to work on examples 1. Class A class is a user defined data type that we can create to for a particular problem we aim to solve. Example we have String class. A String class job is to store Strings and do manipulations. Similarly we can make our own classes which has some functionality. A class can be looked at as a template and we can create multiple instances of the class and we call them objects . Info When programers are first taught what an object is. There will be random exaples thrown at them like car is an object etc. These examples will not make sense unless you know what an object is. Therefore its best to dive into an example One thing to note is that each object that is created stores some information. The information inside the object can be modified without affecting the other objects. 2. Class in Action Problem statement So lets say we are working on a map project. In this project we need to represent locations of any object including my current location. So what what are the informations we need to represent that? If we think about it we can define a persons location using two pieces of data, the latitude and longitude. So lets define a class that can hold this notion of a location. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class SimpleLocation { // member variables public double latitude ; public double longitude ; // contstructor public SimpleLocation ( double lat , double lon ) { this . latitude = lat ; this . longitude = lon ; } // method public double distance ( SimpleLocation other ) { // some implimentation logic } } 1 2 3 4 5 6 7 8 9 10 11 12 public class LocationTester { public static void main ( String [] args ) { SimpleLocation ucd = new SimpleLocation ( 32.9 , - 117.2 ); SimpleLocation dublin = new SimpleLocation ( - 12.0 , - 77.0 ); System . out . println ( ucd . distance ( dublin )); } }","title":"Objects"},{"location":"Java/Objects/#object-oriented-programing","text":"Note Site Under construction [ ] - Content - Friday OCT 3 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks OOPS allows us to write programs in a way that its easy to write, easy to maintain, and easy to debug. The philosophy behind OOPS is that we should build a program that is focused around the problem we try to solve. For example if we are trying to create a pizza delivery system. In real life we have delivery man, map, the kitchen. All these can be defined as objects in our program and have them interact as seperate entities. These concepts will become much more clearer when we start to work on examples","title":"Object Oriented Programing"},{"location":"Java/Objects/#1-class","text":"A class is a user defined data type that we can create to for a particular problem we aim to solve. Example we have String class. A String class job is to store Strings and do manipulations. Similarly we can make our own classes which has some functionality. A class can be looked at as a template and we can create multiple instances of the class and we call them objects . Info When programers are first taught what an object is. There will be random exaples thrown at them like car is an object etc. These examples will not make sense unless you know what an object is. Therefore its best to dive into an example One thing to note is that each object that is created stores some information. The information inside the object can be modified without affecting the other objects.","title":"1. Class"},{"location":"Java/Objects/#2-class-in-action","text":"","title":"2. Class in Action"},{"location":"Java/Objects/#problem-statement","text":"So lets say we are working on a map project. In this project we need to represent locations of any object including my current location. So what what are the informations we need to represent that? If we think about it we can define a persons location using two pieces of data, the latitude and longitude. So lets define a class that can hold this notion of a location. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class SimpleLocation { // member variables public double latitude ; public double longitude ; // contstructor public SimpleLocation ( double lat , double lon ) { this . latitude = lat ; this . longitude = lon ; } // method public double distance ( SimpleLocation other ) { // some implimentation logic } } 1 2 3 4 5 6 7 8 9 10 11 12 public class LocationTester { public static void main ( String [] args ) { SimpleLocation ucd = new SimpleLocation ( 32.9 , - 117.2 ); SimpleLocation dublin = new SimpleLocation ( - 12.0 , - 77.0 ); System . out . println ( ucd . distance ( dublin )); } }","title":"Problem statement"},{"location":"Java/main_method/","text":"Note Site Under construction [x] - Content - Friday OCT 3 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks The main method in Java When running a java project. Java first needs an entry point. The entry point is the main() method. The main method will have the following signature. 1 public static void main ( String [] args ) Multiple classes and main methods The main method can be defined in any class, usually public. There can be multiple classes with main method,However, only one main method will execute and that will be from the class from which run was executed. Static in main signature The main method is kept as a static method so that it can be ran with calling an object of the class. And it also means that the main method is defined for the class and not associated with a particular object. Allowing main method to be called directly.","title":"main method in Java"},{"location":"Java/main_method/#the-main-method-in-java","text":"When running a java project. Java first needs an entry point. The entry point is the main() method. The main method will have the following signature. 1 public static void main ( String [] args )","title":"The main method in Java"},{"location":"Java/main_method/#multiple-classes-and-main-methods","text":"The main method can be defined in any class, usually public. There can be multiple classes with main method,However, only one main method will execute and that will be from the class from which run was executed.","title":"Multiple classes and main methods"},{"location":"Java/main_method/#static-in-main-signature","text":"The main method is kept as a static method so that it can be ran with calling an object of the class. And it also means that the main method is defined for the class and not associated with a particular object. Allowing main method to be called directly.","title":"Static in main signature"},{"location":"Python/Chapter1/","text":"Chapter 1 Note Site Under construction Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Section 1 Lorem markdownum siccare oblatae posset fictamque Ismenides dubites! Tamen pulsisque volucris arguis fatum, arvaque modus. Tenens ut grave conticuere de tellure, virent in terra pugnando investigata nunc: res pugnat. Discedunt et poena de qua summae confusura gutture et acumine vittisconcutiens velamine facinusque ambo! Potest primis, vocis aliis: eodem falsa dubitat montibus testor capitum arbitrium nobis erat. Section 2 Vel collo fontis, iacent lapsu inserui moderatus ponere. Passis est barbariam cursus circumdata trepidans. Iussis ac nitar harundine clipeum longa, montibus magis. Section 3 Neptunus tergusque omen metu bellis detulit munera. An undis; undas ducunt et consueta urbis commenta carinae ire vires! Procedit ius porrigit annum, hac clarum donaverit, taedas quod portante quoque te coronas pietate. Et tecta imagine. Maior nec admovet caecis et vicit finierat cornua!","title":"Chapter 1"},{"location":"Python/Chapter1/#chapter-1","text":"Note Site Under construction Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Chapter 1"},{"location":"Python/Chapter1/#section-1","text":"Lorem markdownum siccare oblatae posset fictamque Ismenides dubites! Tamen pulsisque volucris arguis fatum, arvaque modus. Tenens ut grave conticuere de tellure, virent in terra pugnando investigata nunc: res pugnat. Discedunt et poena de qua summae confusura gutture et acumine vittisconcutiens velamine facinusque ambo! Potest primis, vocis aliis: eodem falsa dubitat montibus testor capitum arbitrium nobis erat.","title":"Section 1"},{"location":"Python/Chapter1/#section-2","text":"Vel collo fontis, iacent lapsu inserui moderatus ponere. Passis est barbariam cursus circumdata trepidans. Iussis ac nitar harundine clipeum longa, montibus magis.","title":"Section 2"},{"location":"Python/Chapter1/#section-3","text":"Neptunus tergusque omen metu bellis detulit munera. An undis; undas ducunt et consueta urbis commenta carinae ire vires! Procedit ius porrigit annum, hac clarum donaverit, taedas quod portante quoque te coronas pietate. Et tecta imagine. Maior nec admovet caecis et vicit finierat cornua!","title":"Section 3"},{"location":"Python/Chapter2/","text":"Chapter 2 Section 1 Lorem markdownum siccare oblatae posset fictamque Ismenides dubites! Tamen pulsisque volucris arguis fatum, arvaque modus. Tenens ut grave conticuere de tellure, virent in terra pugnando investigata nunc: res pugnat. Discedunt et poena de qua summae confusura gutture et acumine vittisconcutiens velamine facinusque ambo! Potest primis, vocis aliis: eodem falsa dubitat montibus testor capitum arbitrium nobis erat. Section 2 Vel collo fontis, iacent lapsu inserui moderatus ponere. Passis est barbariam cursus circumdata trepidans. Iussis ac nitar harundine clipeum longa, montibus magis. Section 3 Neptunus tergusque omen metu bellis detulit munera. An undis; undas ducunt et consueta urbis commenta carinae ire vires! Procedit ius porrigit annum, hac clarum donaverit, taedas quod portante quoque te coronas pietate. Et tecta imagine. Maior nec admovet caecis et vicit finierat cornua!","title":"Chapter 2"},{"location":"Python/Chapter2/#chapter-2","text":"","title":"Chapter 2"},{"location":"Python/Chapter2/#section-1","text":"Lorem markdownum siccare oblatae posset fictamque Ismenides dubites! Tamen pulsisque volucris arguis fatum, arvaque modus. Tenens ut grave conticuere de tellure, virent in terra pugnando investigata nunc: res pugnat. Discedunt et poena de qua summae confusura gutture et acumine vittisconcutiens velamine facinusque ambo! Potest primis, vocis aliis: eodem falsa dubitat montibus testor capitum arbitrium nobis erat.","title":"Section 1"},{"location":"Python/Chapter2/#section-2","text":"Vel collo fontis, iacent lapsu inserui moderatus ponere. Passis est barbariam cursus circumdata trepidans. Iussis ac nitar harundine clipeum longa, montibus magis.","title":"Section 2"},{"location":"Python/Chapter2/#section-3","text":"Neptunus tergusque omen metu bellis detulit munera. An undis; undas ducunt et consueta urbis commenta carinae ire vires! Procedit ius porrigit annum, hac clarum donaverit, taedas quod portante quoque te coronas pietate. Et tecta imagine. Maior nec admovet caecis et vicit finierat cornua!","title":"Section 3"},{"location":"Ruby/introduction/","text":"Hello, World! Note Site Under construction [x] - Content - Friday OCT 2 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks Hello world is the first thing we learn for any programing language. Following the tradition we write the Hello world program for Ruby. Ruby has two commands for printing outputs to console. print puts p 1. puts and print Lets take a look at syntax for the first two 1 print \"Hello, World!\" 1 $ Hello, World! This is fairly straight forward and simple. The print command followed by string. Now lets look at the syntax for puts . 1 puts \"Hello, World!\" 1 $ Hello, World! Both seems to give same output. Inorder to find the difference between print and puts we need to run them together. 1 2 3 4 5 puts \"Ruby is\" puts \"Nice!\" print \"Ruby is\" print \" Nice!\" 1 2 3 $ Ruby is $ Nice! $ Ruby is Nice! Notice the difference. We see that when we used puts everything gets printed in different lines while for print all the output will be in same line. Info This is analogus to System.out.prinln() and System.out.print() in java. 2. More observations interaction with arrays puts and print has an interesting interaction with arrays 1 puts [ 1 , 2 , 3 , nil ] 1 2 3 $ 1 $ 2 $ 3 puts Outputted the elements of the array one by one in new line. Another interesting observation to add is that the last element of the array which is nil is ignored Info nil is similar to Null or None from other programing languages Now lets see what we get when we output an array using print 1 print [ 1 , 2 , 3 , nil ] 1 $ [1,2,3,nil] print gives a string representation of array in a single line. Return type of puts and print Next observation is regarding the return type of puts and print . puts always returns a nil while print returns a string. puts with the back-tick \"`\" There is a special case of puts that involves use of back-tick charecter 1 puts `ls` what it does is that it executes the arguments in the puts command as an os command. So the command gets passed to the os and the output gets printed out. 3.The use of p p is used mainly for debugging purposes as in it returns a raw output. Lets look at an example 1 p \"Hello, World \\n \" 1 $ \"Hello, World\\n\" Here we see that p outputs a raw output including the new line escape charecter which is other wise hidden when using puts and print Reference Jesus Castellos Ruby Guides Mike Danes Youtube tutorial Prof. Mark Keane Lecture COMP47530","title":"Hello, World!"},{"location":"Ruby/introduction/#hello-world","text":"Note Site Under construction [x] - Content - Friday OCT 2 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks Hello world is the first thing we learn for any programing language. Following the tradition we write the Hello world program for Ruby. Ruby has two commands for printing outputs to console. print puts p","title":"Hello, World!"},{"location":"Ruby/introduction/#1-puts-and-print","text":"Lets take a look at syntax for the first two 1 print \"Hello, World!\" 1 $ Hello, World! This is fairly straight forward and simple. The print command followed by string. Now lets look at the syntax for puts . 1 puts \"Hello, World!\" 1 $ Hello, World! Both seems to give same output. Inorder to find the difference between print and puts we need to run them together. 1 2 3 4 5 puts \"Ruby is\" puts \"Nice!\" print \"Ruby is\" print \" Nice!\" 1 2 3 $ Ruby is $ Nice! $ Ruby is Nice! Notice the difference. We see that when we used puts everything gets printed in different lines while for print all the output will be in same line. Info This is analogus to System.out.prinln() and System.out.print() in java.","title":"1. puts and print"},{"location":"Ruby/introduction/#2-more-observations","text":"","title":"2. More observations"},{"location":"Ruby/introduction/#interaction-with-arrays","text":"puts and print has an interesting interaction with arrays 1 puts [ 1 , 2 , 3 , nil ] 1 2 3 $ 1 $ 2 $ 3 puts Outputted the elements of the array one by one in new line. Another interesting observation to add is that the last element of the array which is nil is ignored Info nil is similar to Null or None from other programing languages Now lets see what we get when we output an array using print 1 print [ 1 , 2 , 3 , nil ] 1 $ [1,2,3,nil] print gives a string representation of array in a single line.","title":"interaction with arrays"},{"location":"Ruby/introduction/#return-type-of-puts-and-print","text":"Next observation is regarding the return type of puts and print . puts always returns a nil while print returns a string.","title":"Return type of puts and print"},{"location":"Ruby/introduction/#puts-with-the-back-tick","text":"There is a special case of puts that involves use of back-tick charecter 1 puts `ls` what it does is that it executes the arguments in the puts command as an os command. So the command gets passed to the os and the output gets printed out.","title":"puts with the back-tick \"`\""},{"location":"Ruby/introduction/#3the-use-of-p","text":"p is used mainly for debugging purposes as in it returns a raw output. Lets look at an example 1 p \"Hello, World \\n \" 1 $ \"Hello, World\\n\" Here we see that p outputs a raw output including the new line escape charecter which is other wise hidden when using puts and print","title":"3.The use of p"},{"location":"Ruby/introduction/#reference","text":"Jesus Castellos Ruby Guides Mike Danes Youtube tutorial Prof. Mark Keane Lecture COMP47530","title":"Reference"},{"location":"Ruby/variables/","text":"Hello, World! Note Site Under construction [x] - Content - Friday NOV 6 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks Ruby has some interesting concepts when it comes to variables. Like python Ruby variables are duck typed. This means ruby dynamically decides what the variable type is Ruby has 4 different types of variables Naming Scope Initialization Global Variable Starts with $ Globally accesible initialized with nil Local Variablw Starts with small letter or _ Available only inside a block No initialization means ruby will think its a function Class variable Starts with @ sign Only available in corresponding instance initialized with nil Instance variable Starts with @@ sign Scope limited to class Need initializatiln else causes error 1. Global Variable Global variable like all program are variables accesible from everywhere in program. Global variables must be initialized with $ and must be accessed with same symbol as well 1 2 3 4 5 6 7 $var_x = 1 puts $var_x def local_var puts \"The is local variable #{ $var_x } \" end local_var 1 $ The is local variable 1 2. Local Variables Local variables are identical to the python variables we use. The convention is to start with small letter or with _ . 1 2 3 char_name = \"Sachin\" char_age = \"25\" puts ( \"My name is #{ char_name } . I am #{ char_age } years old\" ) 3.Instance variable Requires the use of symbol @ , This will be similar to the instance varibales in python always assocuated with a single instance 4. Class Variable These variables have have to be initialized with @@ symbol. Class varibale is associate with the full class. The following example will show how to use instance and class variables. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Employee @@no_employees = 0 def initialize ( name ) @employee_name = name @@no_employees += 1 end def result puts \"The name of the employee is #@employee_name \" puts \"The total number of Employees are #@@no_employees \" end end x = Employee . new ( \"Sachin\" ) x1 = Employee . new ( \"Yu\" ) x2 = Employee . new ( \"Freddi\" ) x . result x1 . result x2 . result 1 2 3 4 5 6 $ The name of the employee is Sachin $ The total number of Employees are 3 $ The name of the employee is Yu $ The total number of Employees are 3 $ The name of the employee is Freddie $ The total number of Employees are 3 Reference Jesus Castellos Ruby Guides Mike Danes Youtube tutorial Prof. Mark Keane Lecture COMP47530","title":"Variables"},{"location":"Ruby/variables/#hello-world","text":"Note Site Under construction [x] - Content - Friday NOV 6 [ ] - correctness [ ] - grammar [ ] - Improvemts [ ] - Final tweaks Ruby has some interesting concepts when it comes to variables. Like python Ruby variables are duck typed. This means ruby dynamically decides what the variable type is Ruby has 4 different types of variables Naming Scope Initialization Global Variable Starts with $ Globally accesible initialized with nil Local Variablw Starts with small letter or _ Available only inside a block No initialization means ruby will think its a function Class variable Starts with @ sign Only available in corresponding instance initialized with nil Instance variable Starts with @@ sign Scope limited to class Need initializatiln else causes error","title":"Hello, World!"},{"location":"Ruby/variables/#1-global-variable","text":"Global variable like all program are variables accesible from everywhere in program. Global variables must be initialized with $ and must be accessed with same symbol as well 1 2 3 4 5 6 7 $var_x = 1 puts $var_x def local_var puts \"The is local variable #{ $var_x } \" end local_var 1 $ The is local variable 1","title":"1. Global Variable"},{"location":"Ruby/variables/#2-local-variables","text":"Local variables are identical to the python variables we use. The convention is to start with small letter or with _ . 1 2 3 char_name = \"Sachin\" char_age = \"25\" puts ( \"My name is #{ char_name } . I am #{ char_age } years old\" )","title":"2. Local Variables"},{"location":"Ruby/variables/#3instance-variable","text":"Requires the use of symbol @ , This will be similar to the instance varibales in python always assocuated with a single instance","title":"3.Instance variable"},{"location":"Ruby/variables/#4-class-variable","text":"These variables have have to be initialized with @@ symbol. Class varibale is associate with the full class. The following example will show how to use instance and class variables. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Employee @@no_employees = 0 def initialize ( name ) @employee_name = name @@no_employees += 1 end def result puts \"The name of the employee is #@employee_name \" puts \"The total number of Employees are #@@no_employees \" end end x = Employee . new ( \"Sachin\" ) x1 = Employee . new ( \"Yu\" ) x2 = Employee . new ( \"Freddi\" ) x . result x1 . result x2 . result 1 2 3 4 5 6 $ The name of the employee is Sachin $ The total number of Employees are 3 $ The name of the employee is Yu $ The total number of Employees are 3 $ The name of the employee is Freddie $ The total number of Employees are 3","title":"4. Class Variable"},{"location":"Ruby/variables/#reference","text":"Jesus Castellos Ruby Guides Mike Danes Youtube tutorial Prof. Mark Keane Lecture COMP47530","title":"Reference"}]}